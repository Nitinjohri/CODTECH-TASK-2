import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
credit_card_data=pd.read_csv(r'C:\Users\nitin\AppData\Local\Temp\40dee2f4-95c9-4819-9e1f-f8192a8c9328_archive (1).zip.328\creditcard.csv')
credit_card_data.head() #loading first 5 rows of credit card csv file
credit_card_data.tail() # loading last 5 rows of credit card csv file
credit_card_data.info() # dataset informations
credit_card_data.isnull().sum() # checking the number of missing value
credit_card_data['Class'].value_counts() 
#separating the data for analysis
legit=credit_card_data[credit_card_data.Class == 0] 
fraud=credit_card_data[credit_card_data.Class == 1]
print(legit.shape)
print(fraud.shape)
legit.Amount.describe()#stastical measures of the data
fraud.Amount.describe()
# compare the values for both transcations
credit_card_data.groupby('Class').mean()
# number of dataframe is 492
legit_sample= legit.sample(n = 492)
# concatenating two dataframes
new_dataset = pd.concat([legit_sample,fraud], axis=0)
new_dataset.head()
new_dataset.tail()
new_dataset['Class'].value_counts()
new_dataset['Class'].mean()
# spliting the data into features & targets
x= new_dataset.drop(columns='Class',axis=1)
y=new_dataset['Class']
print(x)
print(y)
# split the data into training data and testing data
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)
print(x.shape,x_train.shape,x_test.shape)
# logistic regression
model=LogisticRegression()
# training the logistic regression model with training data
model.fit(x_train,y_train)
# accurary score
# accurary on training data
x_train_prediction=model.predict(x_train)
training_data_accurary=accuracy_score(x_train_prediction,y_train)
print('accurary on training data:', training_data_accurary)
x_test_prediction=model.predict(x_test)
test_data_accurary= accuracy_score(x_test_prediction,y_test)
print('accurary score on test data:',test_data_accurary)
